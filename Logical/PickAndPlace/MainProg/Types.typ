
TYPE
	PML_CommandType : 	STRUCT  (*Commands structure*)
		UnitMode : DINT; (*Unit Mode target [Covered by MpPackMLCore PackTags]*)
		UnitModeChangeRequest : BOOL; (*Request Unit Mode change [Covered by MpPackMLCore PackTags]*)
		MachSpeed : REAL; (*Current machine speed [Primary packages/minute]*)
		MaterialInterlock : ARRAY[0..31]OF BOOL; (*Materials ready: MaterialInterlocks describes the status of the materials that are ready for processing*)
		CntrlCmd : DINT; (*Control Command [0=Undefined, 1=Reset, 2=Start, 3=Stop, 4=Hold, 5=Unhold, 6=Suspend, 7=Unsuspend, 8=Abort, 9=Clear] [Covered by MpPackMLCore PackTags]*)
		CmdChangeRequest : BOOL; (*State change request [Covered by MpPackMLCore PackTags]*)
		RemoteInterface : ARRAY[0..4]OF PML_RemoteInterfaceType; (*Upstream or downstream machine*)
		Parameter : ARRAY[0..4]OF PML_ParameterType; (*Parameter tags are associated to the end user supervisory interface*)
		Product : ARRAY[0..4]OF PML_ProductType; (*Product data type can be used for defining product and product processing parameter variables*)
	END_STRUCT;
	PML_StatusType : 	STRUCT  (*Status structure*)
		UnitModeCurrent : DINT; (*Unit Mode in current use [0=Invalid, 1=Production, 2=Maintenance, 3=Manual, 4-31=User definable) [Covered by MpPackMLCore PackTags]*)
		UnitModeRequested : BOOL; (*Requested Unit Mode change [Covered by MpPackMLCore PackTags]*)
		UnitModeChangeInProcess : BOOL; (*Requested Unit Mode change is in process [Covered by MpPackMLCore PackTags]*)
		StateCurrent : DINT; (*Current State Number [0=Undefined, 1=Clearing, 2=Stopped, 3=Starting, 4=Idle, 5=Suspended, 6=Execute, 7=Stopping, 8=Aborting, 9=Aborted, 10=Holding, 11=Held, 12=Unholding, 13=Suspending, 14=Unsuspending, 15=Resetting, 16=Completing, 17=Complete] [Covered by MpPackMLCore PackTags]*)
		StateRequested : DINT; (*Target State [0=Undefined, 1=Clearing, 2=Stopped, 3=Starting, 4=Idle, 5=Suspended, 6=Execute, 7=Stopping, 8=Aborting, 9=Aborted, 10=Holding, 11=Held, 12=Unholding, 13=Suspending, 14=Unsuspending, 15=Resetting, 16=Completing, 17=Complete]*)
		StateChangeInProcess : BOOL; (*State Change is in process [Covered by MpPackMLCore PackTags]*)
		MachSpeed : REAL; (*Current Machine Speed setpoint [Primary packages/minute]*)
		CurMachSpeed : REAL; (*Current Machine Speed real [Primary packages/minute]*)
		MaterialInterlock : ARRAY[0..31]OF BOOL; (*Materials ready: MaterialInterlocks describes the status of the materials that are ready for processing*)
		EquipmentInterlock : PML_EquipmentInterlockType; (*UpStream or downstream status*)
		RemoteInterface : ARRAY[0..4]OF PML_RemoteInterfaceType; (*Upstream or downstream machine*)
		Parameter : ARRAY[0..4]OF PML_ParameterType; (*Parameter tags are associated to the end user supervisory interface*)
		Product : ARRAY[0..4]OF PML_ProductType; (*Product data type can be used for displaying product and product processing parameter variables*)
	END_STRUCT;
	PML_AdminType : 	STRUCT  (*Administration structure*)
		Parameter : ARRAY[0..4]OF PML_ParameterType; (*Parameter tags associated to the local Interface are typically used for as parameters that are displayed or used on the unit locally, for example from an HMI*)
		Alarm : ARRAY[0..4]OF PML_AlarmType; (*Array of given size for machine fault number and messaging*)
		AlarmExtent : DINT; (*Extent of alarm array: the alarm extent is associated with the maximum number of alarms needed for the machine annunciation or reporting*)
		AlarmHistory : ARRAY[0..4]OF PML_AlarmType; (*Array of given size for machine fault number and messaging history*)
		AlarmHistoryExtent : DINT; (*Extent of alarm history array: the alarm history extent is associated with the maximum number of alarms needed to be archived or tagged as alarm history for the machine*)
		StopReason : PML_AlarmType; (*Machine stop reason is typically used for  First Out Fault  reporting and other stoppage events. The stop reason is the first event captured during an abort, held, suspended or stop event*)
		StopReasonExtent : DINT; (*Extent of stop reason array: the stop reason extent is associated with the maximum number of stop reasons needed to be archived or tagged as stop reasons for the machine*)
		Warning : PML_AlarmType; (*Machine warning are for general events that do not cause the machine to stop, but may require operator action as a stoppage may be imminent*)
		WarningExtent : DINT; (*The warning extent is associated with the maximum number of warnings needed to be archived or tagged as warnings for the machine*)
		ModeCurrentTime : ARRAY[0..31]OF DINT; (*Current amount of time (in sec) in any defined unit mode [Covered by MpPackMLCore PackTags]*)
		ModeCumulativeTime : ARRAY[0..31]OF DINT; (*Cumulative amount of time (in sec) in any defined unit mode [Covered by MpPackMLCore PackTags]*)
		StateCurrentTime : ARRAY[0..31]OF PML_ModeStateType; (*Current amount of time (in sec) in any defined state in any particular mode [Covered by MpPackMLCore PackTags]*)
		StateCumulativeTime : ARRAY[0..31]OF PML_ModeStateType; (*Cumulative amount of time (in sec) in any defined state in any particular mode since the last timer and counter reset was executed [Covered by MpPackMLCore PackTags]*)
		ProdConsumedCount : ARRAY[0..4]OF PML_ProdCountType; (*Material used / consumed in the production machine*)
		ProdProcessedCount : ARRAY[0..4]OF PML_ProdCountType; (*Number of products processed by the production machine*)
		ProdDefectiveCount : ARRAY[0..4]OF PML_ProdCountType; (*Product that is marked as defective in the production machine*)
		AccTimeSinceReset : DINT; (*Accumulative time since last reset [Covered by MpPackMLCore PackTags]*)
		MachDesignSpeed : REAL; (*Machine design speed [Primary Packages/minute]: maximum design speed of the machine in primary packages per minute for the package configuration being run*)
		StatesDisabled : DINT; (*States 1 to 17 of the PackML State Model can be disabled by turning on the corresponding bit in the INT.  Note that some state transition rules may over-ride the disable bits.  For Example, if HOLDING is not disabled, then HELD cannot be disabled*)
		PLCDateTime : PML_DateTimeType; (*Current Date and Time of the Programmable Logic Controller [Covered by MpPackMLCore PackTags]*)
	END_STRUCT;
	PML_RemoteInterfaceType : 	STRUCT  (*Upstream or downstream machine*)
		Number : DINT; (*Identification number of upstream or downstream unit machine*)
		ControlCmdNumber : DINT; (*Control command for upstream or downstream machine*)
		CmdValue : DINT; (*Control command value associated ControlCmdNumber*)
		Parameter : ARRAY[0..4]OF PML_ParameterType; (*Parameter tags associated to commanded remote interface*)
	END_STRUCT;
	PML_ParameterType : 	STRUCT  (*Parameter structure*)
		ID : DINT; (*ID value of Parameter*)
		Name : STRING[50]; (*String value assigned to Parameter*)
		Unit : STRING[5]; (*String value of Parameter units*)
		Value : REAL; (*Numeric value of Parameter*)
	END_STRUCT;
	PML_ProductType : 	STRUCT  (*Product structure*)
		ProductID : DINT; (*Structured array of Product ID#*)
		ProcessVariables : ARRAY[0..4]OF PML_ParameterType; (*Array of  data type Descriptor*)
		Ingredients : ARRAY[0..4]OF PML_IngredientsType; (*Structured Array for Ingredient Identification Parameters*)
	END_STRUCT;
	PML_AlarmType : 	STRUCT  (*Alarm structure*)
		Trigger : BOOL; (*Alarm Trigger should be turned on only when the alarm is currently active*)
		ID : DINT; (*Alarm message identification number *)
		Value : DINT; (*Alarm message number *)
		Message : STRING[80]; (*Alarm message*)
		Category : DINT; (*Alarm category: Category is used to identity what type of alarm has occurred (e.g. electrical, mechanical, materials, utilities, etc.)*)
		AlmDateTime : PML_DateTimeType; (*Structure of date and time in the alarm array to detail the date and time the alarm occurred*)
		AckDateTime : PML_DateTimeType; (*Structure of date and time in the alarm array to detail the date and time the alarm was acknowledged*)
	END_STRUCT;
	PML_IngredientsType : 	STRUCT  (*Ingredients structure*)
		IngredientID : DINT; (*The IngredientID is an arbitrary number associated with the raw material, or ingredient for a particular product number*)
		Parameter : ARRAY[0..4]OF PML_ParameterType; (*This array or structures is used for parameters associated with a particular ingredient or raw material used the processing of a particular product number*)
	END_STRUCT;
	PML_ProdCountType : 	STRUCT  (*Product count structure*)
		ID : DINT; (*This is the arbitrary (user defined) ID value of the consumed production material*)
		Name : STRING[80]; (*The name is used to literally describe the material ID, and its associated material*)
		Unit : STRING[5]; (*The unit tag is used to describe the names associated with a specific material used by the machine*)
		Count : DINT; (*The count value is used as a variable for displaying information about the amount of consumed production material*)
		AccCount : DINT; (*The accumulative count value is used as a variable for displaying information about the total amount of consumed production material*)
	END_STRUCT;
	PML_ModeStateType : 	STRUCT  (*Mode / State structure*)
		State : ARRAY[0..17]OF DINT; (*State inside each mode*)
	END_STRUCT;
	PML_EquipmentInterlockType : 	STRUCT  (*UpStream or downstream status*)
		Blocked : BOOL; (*This bit indicates that a downstream system is not able to accept product*)
		Starved : BOOL; (*This bit indicates that an upstream system is not able to supply product*)
	END_STRUCT;
	PML_DateTimeType : 	STRUCT  (*Date and time format*)
		Year : DINT; (*Date format: Year*)
		Month : DINT; (*Date format: Month*)
		Day : DINT; (*Date format: Day*)
		Hour : DINT; (*Time format: hours (24 hours format)*)
		Min : DINT; (*Time format: minutes*)
		Sec : DINT; (*Time format: seconds*)
		uSec : DINT; (*Time format: microseconds*)
	END_STRUCT;
END_TYPE
